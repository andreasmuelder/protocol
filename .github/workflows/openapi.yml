name: OpenAPI - Generator & Release

on:
  workflow_dispatch:
    inputs:
      releaseversion:
        description: 'Release version'
        required: true
        default: '0.0.1'
  release:
    types:
      - published

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Validate OpenAPI definition
        uses: char0n/swagger-editor-validate@v1.2.1
        with:
          definition-file: klauke-enterprises-api.v3.yaml

  documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Generate Swagger UI
        uses: Legion2/swagger-ui-action@v1
        with:
          output: docs
          spec-file: klauke-enterprises-api.v3.yaml
      - name: Deploy Documentation
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: gh-pages
          FOLDER: docs
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  generate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - run: npm install @openapitools/openapi-generator-cli -g
    - run: openapi-generator-cli generate
    - name: Upload library
      uses: 'actions/upload-artifact@v2'
      with:
        name: klauke-enterprises-api-clients
        path: build/**

  upload:
    runs-on: ubuntu-latest
    needs:
      - generate
    strategy:
      matrix:
        library:
          - java
          - ts
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
        with:
          name: klauke-enterprises-api-clients
          path: build
      - name: Upload library
        uses: 'actions/upload-artifact@v2'
        with:
          name: klauke-enterprises-api-client-${{ matrix.library }}
          path: build/${{ matrix.library }}/

  package-protocol-spring:
    runs-on: ubuntu-latest
    needs:
      - generate
    defaults:
      run:
        working-directory: pkg/protocol-spring
    steps:
      - uses: actions/checkout@v2
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
        with:
          name: klauke-enterprises-api-clients
          path: build
      - name: Cache
        uses: actions/cache@v1.1.2
        with:
          path: .gradle/caches
          key: gradle-cache
      - name: Set up JDK 16
        uses: actions/setup-java@v1
        with:
          java-version: 16
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORG_GRADLE_PROJECT_GPG_KEY: ${{ secrets.GPG_KEY }}
          ORG_GRADLE_PROJECT_GPG_KEY_PASSPHRASE: ${{ secrets.GPG_KEY_PASSPHRASE }}
          VERSION: ${{ github.event.inputs.releaseversion }}
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: protocol-spring
          path: pkg/protocol-spring/build/libs/*
      - name: Publish package
        run: ./gradlew publish
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORG_GRADLE_PROJECT_GPG_KEY: ${{ secrets.GPG_KEY }}
          ORG_GRADLE_PROJECT_GPG_KEY_PASSPHRASE: ${{ secrets.GPG_KEY_PASSPHRASE }}
          VERSION: ${{ github.event.inputs.releaseversion }}

  package-ts-client:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: build/ts
    needs:
      - generate
    steps:
      - uses: actions/checkout@v2
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
        with:
          name: klauke-enterprises-api-clients
          path: build
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
          registry-url: https://npm.pkg.github.com
      - run: npm version ${{ github.event.inputs.releaseversion }}
      - run: npm install
      - run: npm build
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs:
      - validate
      - generate
      - documentation
      - upload
      - package-protocol-spring
      - package-ts-client
    steps:
      - uses: actions/checkout@v2
      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v1.0.0
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.releaseversion }}
          release_name: ${{ github.event.inputs.releaseversion }}
          body: |
            Hey there :wave:,

            the new version `${{ github.event.inputs.releaseversion }}` is finally out!

            Thank you for the interest in the klauke enterprises api.

            If you want to support the development of this api and many other awesome pieces
            of software you can consider sponsoring us.

            ### Usage

            You can use the java protocol definitiobs in your project easily with Maven or Gradle, see examples below:

            #### Gradle

            **Gradle repositories**
            ```groovy
            repositories {
              maven {
                name = "klauke-enterprises-protocol-github-package-registry"
                description = "Klauke Enterprises Protocol GitHub Package Registry"
                url = "https://maven.pkg.github.com/klauke-enterprises/protocol/"
                credentials {
                  username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
                  password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
                }
              }
            }
            ```

            **Gradle dependencies**
            ```groovy
            dependencies {
              implementation 'com.klauke-enterprises:protocol:${{ github.event.inputs.releaseversion }}'
            }
            ```

            #### Maven

            **Maven repositories**
            ```xml
            <repositories>
                <repository>
                    <id>klauke-enterprises-protocol-github-package-registry</id>
                    <name>Klauke Enterprises Protocol GitHub Package Registry</name>
                    <url>https://maven.pkg.github.com/klauke-enterproses/protocol/</url>
                </repository>
            </repositories>
            ```

            **Maven dependencies**
            ```xml
            <dependency>
              <groupId>com.klaukeenterprises</groupId>
              <artifactId>protocl</artifactId>
              <version>${{ github.event.inputs.releaseversion }}</version>
            </dependency>
            ```

            ### Things that changed since last release
            ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
      - name: Upload Release Specification
        id: upload-release-specification
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: klauke-enterprises-api.v3.yaml
          asset_name: klauke-enterprises-api.yaml
          asset_content_type: application/json

